load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_doc", "rust_doc_test")
# OCI Container Rules
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push",  "oci_image_index")
# Custom macro
load("//:build_image.bzl", "build_image", "build_tag")

# Build binary
rust_binary(
    name = "bin",
    crate_root = "src/main.rs",

    srcs = glob([
        "src/*/*.rs",
        "src/*.rs",
    ]),

    deps = [
        # Custom Memory Allocator
        "@crates//:jemallocator",
        # External crates
        "@crates//:arc-swap",
        "@crates//:serde",
        "@crates//:serde_json",
        "@crates//:tokio",
        "@crates//:tokio-cron-scheduler",
        "@crates//:warp",
    ],

    platform = "//build/platforms:linux_x86_64_musl",

    tags = ["service", "rest-tokio"],

    visibility = ["//visibility:public"],
)

# Build container image
build_image(
    name = "image",
    srcs = [":bin"],
    exposed_ports = ["3232"],
    visibility = ["//visibility:public"],
)

# Build an unique and immutable image tag based on the image SHA265 digest.
build_tag(
    name = "remote_tag",
    image = ":image",
    input = "image.json.sha256",
    output = "_tag.txt",
)

# Publish image to registry
oci_push(
    name = "push",
    image = ":image",
    repository = "my.registry.com/musl",
    remote_tags = ":remote_tag",
    visibility = ["//visibility:public"],
)
